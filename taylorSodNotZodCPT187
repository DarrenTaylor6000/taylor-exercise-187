package edu.cpt187.taylor.participation4;

import java.util.Scanner;

public class MainClass 
{
	//Menu Options
	public static final String[] MENU_OPTIONS = { "Load Inventory", "Create Order", "Quit" };

	public static void main(String[] args) 
	{
		//Scanner
		Scanner input = new Scanner(System.in);

		//Objects
		SodOrder mySodOrder = new SodOrder();
		Inventory currentInventory = new Inventory();

		//Needed Variables
		String userName;
		char menuSelection = ' ';


		displayWelcomeBanner();

		userName = getUserName(input);

		menuSelection = validateMainMenu(input);

		while (menuSelection != 'Q') 
		{
			if (menuSelection == 'A') 
			{
				currentInventory.setInStockCounts(validateCounts(input, currentInventory.getItemNames()));
			}//End Option A
			else 
			{
				mySodOrder.setItemSelection(validateItemMenu(input, currentInventory.getItemNames(), currentInventory.getItemPrices()));
				mySodOrder.setItemName(currentInventory.getItemNames());
				mySodOrder.setItemPrice(currentInventory.getItemPrices());
				mySodOrder.setHowMany(validateHowMany(input));
				if (mySodOrder.getInStockCount(currentInventory.getInStockCounts()) < mySodOrder.getHowMany()) 
				{
					displayOutOfStock(mySodOrder.getItemName());
				} // End Out Of Stock
				else 
				{
					mySodOrder.setDiscountType(validateDiscountMenu(input, currentInventory.getDiscountNames(),currentInventory.getDiscountRates()));
					mySodOrder.setDiscountName(currentInventory.getDiscountNames());
					mySodOrder.setDiscountRate(currentInventory.getDiscountRates());
					mySodOrder.setDecreaseInStock(currentInventory);
					mySodOrder.setPrizeName(currentInventory.getPrizeNames(), currentInventory.getRandomNumber());
					if (mySodOrder.getDiscountRate() > 0.0) 
					{
						displayItemReceipt(userName, mySodOrder.getItemName(), mySodOrder.getItemPrice(),
								mySodOrder.getHowMany(), mySodOrder.getDiscountName(), mySodOrder.getDiscountRate(),
								mySodOrder.getDiscountAmt(), mySodOrder.getDiscountPrice(), mySodOrder.getSubTotal(),
								mySodOrder.getTaxRate(), mySodOrder.getTaxAmt(), mySodOrder.getTotalCost(),
								mySodOrder.getPrizeName());
					} //End Display With Discount
					else
					{
						displayItemReceipt(userName, mySodOrder.getItemName(), mySodOrder.getItemPrice(),
								mySodOrder.getHowMany(), mySodOrder.getTaxRate(), mySodOrder.getTaxAmt(),
								mySodOrder.getTotalCost(), mySodOrder.getPrizeName());
					}//End Display Without Discount
				} // End User Input
			} // End Option B
			menuSelection = validateMainMenu(input);
		} // End While Loop

		if (mySodOrder.getTotalCost() > 0) 
		{
			displayFinalReport(currentInventory.getItemNames(), mySodOrder.getItemCounts(),
					currentInventory.getDiscountNames(), mySodOrder.getDiscountCounts(),
					currentInventory.getPrizeNames(), mySodOrder.getPrizeCounts(), currentInventory.getInStockCounts());
		} // End Output Final Report
		displayFarewellMessage(userName);
	}// END of main method

	private static int[] validateCounts(Scanner input, String[] borrowedItemNames) 
	{
		int[] stock = new int[borrowedItemNames.length];
		int index = 0;

		while(index < borrowedItemNames.length)
		{
			System.out.printf("%s%s%s", "How much " , borrowedItemNames[index], " is there? ");
			stock[index] = input.nextInt();
			index++;
		}

		return stock;
	}

	private static void displayItemReceipt(String borrowedUserName, String borrowedItemName, double borrowedItemPrice, int borrowedHowMany,
			double borrowedTaxRate, double borrowedTaxAmt, double borrowedTotalCost, String borrowedPrizeName) 
	{
		borrowedTaxRate = borrowedTaxRate * 100;

		System.out.printf("%n%-60s", "~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~");
		System.out.printf("%n%-60s", "ORDER REPORT");
		System.out.printf("%n%-60s", "~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~");
		System.out.printf("%n%-20s%10s%n", "Customer Name:", borrowedUserName);

		System.out.printf("%n%-20s%10s", "Item Name", borrowedItemName);
		System.out.printf("%n%-20s%1s%10.2f%n", "Item Price:", "$", borrowedItemPrice);

		System.out.printf("%n%-20s%10d%n", "Amount Purchased:", borrowedHowMany);

		System.out.printf("%n%-20s%11.1f%s", "Tax Rate:", borrowedTaxRate, " %");
		System.out.printf("%n%-20s%1s%10.2f%n", "Tax Amount:", "$", borrowedTaxAmt);

		System.out.printf("%n%-20s%1s%10.2f%n", "Total Cost:", "$", borrowedTotalCost);

		System.out.printf("%n%-20s%10s%n", "Prize Won:", borrowedPrizeName);

		System.out.printf("%s%n%n", "~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~");
	}//End Second Item Receipt

	private static void displayOutOfStock(String borrowedItemName) 
	{
		System.out.printf("%n%s", "~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~");
		System.out.printf("%n%s%s", borrowedItemName, " is out of stock.");
		System.out.printf("%n%s%n", "~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~");
	}//End Out of Stock

	public static void displayWelcomeBanner() 
	{
		System.out.println("Welcome to the SodNotZod price calculator program!");
		System.out.println("It will ask you some information..");
		System.out.println("It will use that info to generate a receipt.");
	}// END OF display method

	public static String getUserName(Scanner borrowedInput) 
	{
		System.out.printf("%n%s", "Please enter your first name: ");
		return borrowedInput.next();
	}// END getUserName

	public static char validateMainMenu(Scanner borrowedInput) 
	{
		char localSelection = ' ';
		displayMainMenu();
		localSelection = borrowedInput.next().toUpperCase().charAt(0);
		while (localSelection != 'A' && localSelection != 'B' && localSelection != 'Q') 
		{
			System.out.println("Please enter a valid menu option.");
			displayMainMenu();
			localSelection = borrowedInput.next().toUpperCase().charAt(0);
		} // END validation loop
		return localSelection;
	}// END validateMainMenu

	public static void displayMainMenu() 
	{
		/*
		 * int asciiA = 65; 
		 * int index = 0; 
		 * int converter = 0; 
		 * char character = ' ';
		 * System.out.printf("%n%s%n", "~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~");
		 * System.out.printf("%s%n", "MAIN MENU"); 
		 * System.out.printf("%s%n","~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~");
		 * while(index < MENU_OPTIONS.length) 
		 * { 
		 * 		converter = index + asciiA;
		 * 		character = (char)converter;
		 * 		if(index < MENU_OPTIONS.length - 1) 
		 * 		{  
		 * 			System.out.printf("%s%c%-5s%s%n", "[", character, "]", MENU_OPTIONS[index]);
		 * 		} 
		 * 		else 
		 * 		{ 
		 * 			System.out.printf("%-7s%s%n", "[Q]", MENU_OPTIONS[index]); 
		 * 		}
		 * index++;
		 * } 
		 * System.out.printf("%s", "Enter selection here: ");
		 * System.out.printf("%s%n","~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~");
		 */

		System.out.printf("%n%s%n", "~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~");
		System.out.printf("%s%n", "MAIN MENU");
		System.out.printf("%s%n", "~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~");
		System.out.printf("%-7s%s%n", "[A]", MENU_OPTIONS[0]);
		System.out.printf("%-7s%s%n", "[B]", MENU_OPTIONS[1]);
		System.out.printf("%-7s%s%n", "[Q]", MENU_OPTIONS[2]);
		System.out.printf("%s%n", "~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~");
		System.out.printf("%s", "Enter selection here: ");

	}// END displayMainMenu

	public static char validateItemMenu(Scanner borrowedInput, String[] itemNames, double[] itemPrices) 
	{
		char localSelection = ' ';
		displayItemMenu(itemNames, itemPrices);
		localSelection = borrowedInput.next().toUpperCase().charAt(0);
		while (localSelection != 'A' && localSelection != 'B' && localSelection != 'C') 
		{
			System.out.println("Please enter a valid menu option.");
			displayItemMenu(itemNames, itemPrices);
			localSelection = borrowedInput.next().toUpperCase().charAt(0);
		} // END validation loop
		return localSelection;
	}// END validateItemMenu

	public static void displayItemMenu(String[] borrowedItemNames, double[] borrowedItemPrices) 
	{
		System.out.println("\nITEM MENU");
		System.out.printf("%-4s%-20s%1s%8.2f\n", "[A]", borrowedItemNames[0], "$", borrowedItemPrices[0]);
		System.out.printf("%-4s%-20s%1s%8.2f\n", "[B]", borrowedItemNames[1], "$", borrowedItemPrices[1]);
		System.out.printf("%-4s%-20s%1s%8.2f\n", "[C]", borrowedItemNames[2], "$", borrowedItemPrices[2]);
		System.out.print("\nEnter selection here: ");
	}// END displayItemMenu

	public static int validateHowMany(Scanner borrowedInput) 
	{
		int validHowMany = 0;
		displayHowManyMenu();
		validHowMany = borrowedInput.nextInt();
		while (validHowMany <= 0) 
		{
			System.out.println("Please enter a valid menu option.");
			displayHowManyMenu();
			validHowMany = borrowedInput.nextInt();
		} // END validation loop
		return validHowMany;
	}// END validateHowMany

	public static void displayHowManyMenu() 
	{
		System.out.println("\nHow much Sod would you like to purchase?");
		System.out.print("\nEnter amount here: ");
	}// END displayHowManyMenu

	public static char validateDiscountMenu(Scanner borrowedInput, String[] discountNames, double[] discountRates) 
	{
		char localSelection = ' ';
		displayDiscountMenu(discountNames, discountRates);
		localSelection = borrowedInput.next().toUpperCase().charAt(0);
		while (localSelection != 'A' && localSelection != 'B' && localSelection != 'C') 
		{
			System.out.println("Please enter a valid menu option.");
			displayDiscountMenu(discountNames, discountRates);
			localSelection = borrowedInput.next().toUpperCase().charAt(0);
		} // END validation loop
		return localSelection;
	}// END validateDiscountMenu

	public static void displayDiscountMenu(String[] borrowedDiscountNames, double[] borrowedDiscountRates) 
	{
		System.out.println("\nITEM MENU");
		System.out.printf("%-4s%-20s%8.1f%s%n", "[A]", borrowedDiscountNames[0], borrowedDiscountRates[0] * 100, "%");
		System.out.printf("%-4s%-20s%8.1f%s%n", "[B]", borrowedDiscountNames[1], borrowedDiscountRates[1] * 100, "%");
		System.out.printf("%-4s%-20s%8.1f%s%n", "[C]", borrowedDiscountNames[2], borrowedDiscountRates[2] * 100, "%");
		System.out.print("\nEnter selection here: ");
	}// END displayDiscountMenu

	public static void displayItemReceipt(String borrowedUserName, String borrowedItemName, double borrowedItemPrice,
			int borrowedHowMany, String borrowedDiscountName, double borrowedDiscountRate, double borrowedDiscountAmt,
			double borrowedDiscountPrice, double borrowedSubTotal, double borrowedTaxRate, double borrowedTaxAmt,
			double borrowedTotalCost, String borrowedPrizeName) 
	{
		borrowedDiscountRate = borrowedDiscountRate * 100;
		borrowedTaxRate = borrowedTaxRate * 100;

		System.out.printf("%n%-60s", "~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~");
		System.out.printf("%n%-60s", "ORDER REPORT");
		System.out.printf("%n%-60s", "~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~");
		System.out.printf("%n%-20s%10s%n", "Customer Name:", borrowedUserName);

		System.out.printf("%n%-20s%10s", "Item Name", borrowedItemName);
		System.out.printf("%n%-20s%1s%10.2f%n", "Item Price:", "$", borrowedItemPrice);

		System.out.printf("%n%-20s%11.1f%s", "Discount Rate:", borrowedDiscountRate, " %");
		System.out.printf("%n%-20s%1s%10.2f", "Discount Amount:", "$", borrowedDiscountAmt);
		System.out.printf("%n%-20s%1s%10.2f%n", "Discount Price:", "$", borrowedDiscountPrice);

		System.out.printf("%n%-20s%10d%n", "Amount Purchased:", borrowedHowMany);

		System.out.printf("%n%-20s%1s%10.2f", "Sub Total:", "$", borrowedSubTotal);
		System.out.printf("%n%-20s%11.1f%s", "Tax Rate:", borrowedTaxRate, " %");
		System.out.printf("%n%-20s%1s%10.2f%n", "Tax Amount:", "$", borrowedTaxAmt);

		System.out.printf("%n%-20s%1s%10.2f", "Total Cost:", "$", borrowedTotalCost);

		System.out.printf("%n%-20s%10s%n", "Prize Won:", borrowedPrizeName);

		System.out.println("\n~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~\n\n");
	}// END displayItemReceipt

	public static void displayFinalReport(String[] itemNames, int[] itemCounts, String[] discountNames,
			int[] discountCounts, String[] borrowedPrizeNames, int[] borrowedPrizeCounts, int[] borrowedInStockCounts) 
	{
		System.out.printf("%n%s", "~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~");
		System.out.printf("%n%s", "FINAL REPORT");
		System.out.printf("%n%s", "~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~");

		System.out.printf("%n%-30s%10d", itemNames[0] + " Count:", itemCounts[0]);
		System.out.printf("%n%-30s%10d", itemNames[1] + " Count:", itemCounts[1]);
		System.out.printf("%n%-30s%10d", itemNames[2] + " Count:", itemCounts[2]);

		System.out.printf("%n%n%-30s%10d", discountNames[0] + " Count:", discountCounts[0]);
		System.out.printf("%n%-30s%10d", discountNames[1] + " Count:", discountCounts[1]);
		System.out.printf("%n%-30s%10d", discountNames[2] + " Count:", discountCounts[2]);

		System.out.printf("%n%n%-30s%10d", borrowedPrizeNames[0] + " Count:", borrowedPrizeCounts[0]);
		System.out.printf("%n%-30s%10d", borrowedPrizeNames[1] + " Count:", borrowedPrizeCounts[1]);
		System.out.printf("%n%-30s%10d", borrowedPrizeNames[2] + " Count:", borrowedPrizeCounts[2]);
		
		System.out.printf("%n%n%-30s%10d", itemNames[0] + " Left in Stock:", borrowedInStockCounts[0]);
		System.out.printf("%n%-30s%10d", itemNames[1] + "  Left in Stock:", borrowedInStockCounts[1]);
		System.out.printf("%n%-30s%10d", itemNames[2] + "  Left in Stock:", borrowedInStockCounts[2]);

		System.out.printf("%n%s%n%n", "~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~");
	}//End displayFinalReport

	public static void displayFarewellMessage(String borrowedUserName) 
	{
		System.out.printf("%n%n%s%s%s%n", "Thank you, ", borrowedUserName, ", for using this program!");
		System.out.printf("%s%n", "I hope you found it useful.");
		System.out.printf("%s%n", "Please come back and use this program again.");
	}// END displayFarewellMessage

}// END of class
